/* soapStub.h
   Generated by gSOAP 2.8.132 for CTMService.h

gSOAP XML Web services tools
Copyright (C) 2000-2023, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include <vector>

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 208132
# error "GSOAP VERSION 208132 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

struct ns1__invokeResponse;	/* CTMService.h:287 */
struct ns1__invoke;	/* CTMService.h:287 */
struct ns2__invokeResponse;	/* CTMService.h:370 */
struct ns2__invoke;	/* CTMService.h:370 */

/* CTMService.h:287 */
#ifndef SOAP_TYPE_ns1__invokeResponse
#define SOAP_TYPE_ns1__invokeResponse (11)
/* complex XML schema type 'ns1:invokeResponse': */
struct SOAP_CMAC ns1__invokeResponse {
      public:
        /** Required element 'invokeReturn' of XML schema type 'xsd:string' */
        std::string _invokeReturn;
      public:
        /** Return unique type id SOAP_TYPE_ns1__invokeResponse */
        long soap_type() const { return SOAP_TYPE_ns1__invokeResponse; }
        /** Constructor with member initializations */
        ns1__invokeResponse() : _invokeReturn() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__invokeResponse * SOAP_FMAC2 soap_instantiate_ns1__invokeResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* CTMService.h:287 */
#ifndef SOAP_TYPE_ns1__invoke
#define SOAP_TYPE_ns1__invoke (12)
/* complex XML schema type 'ns1:invoke': */
struct SOAP_CMAC ns1__invoke {
      public:
        /** Required element 'xmlData' of XML schema type 'xsd:string' */
        std::string _xmlData;
      public:
        /** Return unique type id SOAP_TYPE_ns1__invoke */
        long soap_type() const { return SOAP_TYPE_ns1__invoke; }
        /** Constructor with member initializations */
        ns1__invoke() : _xmlData() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__invoke * SOAP_FMAC2 soap_instantiate_ns1__invoke(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* CTMService.h:370 */
#ifndef SOAP_TYPE_ns2__invokeResponse
#define SOAP_TYPE_ns2__invokeResponse (14)
/* complex XML schema type 'ns2:invokeResponse': */
struct SOAP_CMAC ns2__invokeResponse {
      public:
        /** Required element 'invokeReturn' of XML schema type 'xsd:string' */
        std::string _invokeReturn;
      public:
        /** Return unique type id SOAP_TYPE_ns2__invokeResponse */
        long soap_type() const { return SOAP_TYPE_ns2__invokeResponse; }
        /** Constructor with member initializations */
        ns2__invokeResponse() : _invokeReturn() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns2__invokeResponse * SOAP_FMAC2 soap_instantiate_ns2__invokeResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* CTMService.h:370 */
#ifndef SOAP_TYPE_ns2__invoke
#define SOAP_TYPE_ns2__invoke (15)
/* complex XML schema type 'ns2:invoke': */
struct SOAP_CMAC ns2__invoke {
      public:
        /** Required element 'xmlData' of XML schema type 'xsd:string' */
        std::string _xmlData;
      public:
        /** Return unique type id SOAP_TYPE_ns2__invoke */
        long soap_type() const { return SOAP_TYPE_ns2__invoke; }
        /** Constructor with member initializations */
        ns2__invoke() : _xmlData() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns2__invoke * SOAP_FMAC2 soap_instantiate_ns2__invoke(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* CTMService.h:381 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (16)
/* SOAP_ENV__Header: */
struct SOAP_CMAC SOAP_ENV__Header {
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Header */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* CTMService.h:381 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (17)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_CMAC SOAP_ENV__Code {
      public:
        /** Optional element 'soap:Value' of XML schema type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'soap:Subcode' of XML schema type 'soap:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Code */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code() : SOAP_ENV__Value(), SOAP_ENV__Subcode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* CTMService.h:381 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (19)
/* SOAP_ENV__Detail: */
struct SOAP_CMAC SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_<typename> assigned to __type */
        /** Do not create a cyclic data structure through this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Detail */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail() : __any(), __type(), fault() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* CTMService.h:381 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (22)
/* SOAP_ENV__Reason: */
struct SOAP_CMAC SOAP_ENV__Reason {
      public:
        /** Optional element 'soap:Text' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Reason */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason() : SOAP_ENV__Text() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* CTMService.h:381 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (23)
/* SOAP_ENV__Fault: */
struct SOAP_CMAC SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XML schema type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XML schema type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XML schema type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XML schema type 'soap:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'soap:Code' of XML schema type 'soap:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'soap:Reason' of XML schema type 'soap:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'soap:Node' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'soap:Role' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'soap:Detail' of XML schema type 'soap:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Fault */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault() : faultcode(), faultstring(), faultactor(), detail(), SOAP_ENV__Code(), SOAP_ENV__Reason(), SOAP_ENV__Node(), SOAP_ENV__Role(), SOAP_ENV__Detail() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* (built-in):0 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
typedef char *_XML;
#endif

/* (built-in):0 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
typedef char *_QName;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* std::string has binding name 'std__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (8)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (23)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (22)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (19)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (17)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (16)
#endif

/* struct ns2__invoke has binding name 'ns2__invoke' for type 'ns2:invoke' */
#ifndef SOAP_TYPE_ns2__invoke
#define SOAP_TYPE_ns2__invoke (15)
#endif

/* struct ns2__invokeResponse has binding name 'ns2__invokeResponse' for type 'ns2:invokeResponse' */
#ifndef SOAP_TYPE_ns2__invokeResponse
#define SOAP_TYPE_ns2__invokeResponse (14)
#endif

/* struct ns1__invoke has binding name 'ns1__invoke' for type 'ns1:invoke' */
#ifndef SOAP_TYPE_ns1__invoke
#define SOAP_TYPE_ns1__invoke (12)
#endif

/* struct ns1__invokeResponse has binding name 'ns1__invokeResponse' for type 'ns1:invokeResponse' */
#ifndef SOAP_TYPE_ns1__invokeResponse
#define SOAP_TYPE_ns1__invokeResponse (11)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (25)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (24)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (18)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stub Functions                                            *
 *                                                                            *
\******************************************************************************/

    
    /** Web service synchronous operation 'soap_call_ns1__invoke' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__invoke(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& _xmlData, std::string &_invokeReturn);
    /** Web service asynchronous operation 'soap_send_ns1__invoke' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__invoke(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& _xmlData);
    /** Web service asynchronous operation 'soap_recv_ns1__invoke' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__invoke(struct soap *soap, std::string &_invokeReturn);
    
    /** Web service synchronous operation 'soap_call_ns2__invoke' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns2__invoke(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& _xmlData, std::string &_invokeReturn);
    /** Web service asynchronous operation 'soap_send_ns2__invoke' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns2__invoke(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& _xmlData);
    /** Web service asynchronous operation 'soap_recv_ns2__invoke' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns2__invoke(struct soap *soap, std::string &_invokeReturn);

/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/

    /** Web service operation 'ns1__invoke' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns1__invoke(struct soap*, std::string _xmlData, std::string &_invokeReturn);
    /** Web service operation 'ns2__invoke' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns2__invoke(struct soap*, std::string _xmlData, std::string &_invokeReturn);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__invoke(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns2__invoke(struct soap*);

#endif

/* End of soapStub.h */
